// Code generated by mockery v2.36.0. DO NOT EDIT.

package auth

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockIAuthService is an autogenerated mock type for the IAuthService type
type MockIAuthService struct {
	mock.Mock
}

// Authorize provides a mock function with given fields: r
func (_m *MockIAuthService) Authorize(r *http.Request) (string, error) {
	ret := _m.Called(r)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*http.Request) (string, error)); ok {
		return rf(r)
	}
	if rf, ok := ret.Get(0).(func(*http.Request) string); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*http.Request) error); ok {
		r1 = rf(r)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockIAuthService creates a new instance of MockIAuthService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIAuthService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIAuthService {
	mock := &MockIAuthService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
