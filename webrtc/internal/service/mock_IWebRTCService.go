// Code generated by mockery v2.36.0. DO NOT EDIT.

package service

import (
	context "context"

	domain "github.com/xcheng85/coturn-web-solid/webrtc/internal/domain"
	dto "github.com/xcheng85/coturn-web-solid/webrtc/internal/dto"

	mock "github.com/stretchr/testify/mock"
)

// MockIWebRTCService is an autogenerated mock type for the IWebRTCService type
type MockIWebRTCService struct {
	mock.Mock
}

// GetWebRTCConfig provides a mock function with given fields: ctx, data
func (_m *MockIWebRTCService) GetWebRTCConfig(ctx context.Context, data dto.GetWebRTCConfigRequest) (*domain.RTCConfig, error) {
	ret := _m.Called(ctx, data)

	var r0 *domain.RTCConfig
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, dto.GetWebRTCConfigRequest) (*domain.RTCConfig, error)); ok {
		return rf(ctx, data)
	}
	if rf, ok := ret.Get(0).(func(context.Context, dto.GetWebRTCConfigRequest) *domain.RTCConfig); ok {
		r0 = rf(ctx, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.RTCConfig)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, dto.GetWebRTCConfigRequest) error); ok {
		r1 = rf(ctx, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockIWebRTCService creates a new instance of MockIWebRTCService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIWebRTCService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIWebRTCService {
	mock := &MockIWebRTCService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
